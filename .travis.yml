language: go
# see https://docs.travis-ci.com/user/reference/overview/#Virtualization-environments
# for the detail
# sudo: requried
dist: trusty

go:
  - 1.12.x

env:
  global:
    - GO111MODULE=on
    - secure: "u8MlnVCbMgjGi5Ed3vNr6lZkNd3YAMBlpifUS39m3Ud18dO3jafy48K8Z7DkSWRRt+XwqMr+IZ38QDQGv7UNsyFJ6pjEXriH5aczkdt+YECuNJ7JOw0z6BZkZJPAbOgGQnDCiAhdvhYbp0LUV2LXs2DU8FZH61d8H7f3HJwohUACLA0i2suQEyRsjLEWF29r9+0aTQmqnLUJukABuNTXLcEDG9crETpA1fCAJUWOOF0fwyXrAhO9CBdC8sLzXUQziTLTaHVAby402U1JeWin9BYAH2aTMSZ7adTwTCk8Tc1pcAd01TMOsXIF+Q7RPQGCH2w7RM+SS9/Exdpe1EsLw//CWWot/ipvzuwnFPAF9jzxnbD2b6/Ixc8tPRrUwfsIgm0wJKyE/bszZC0TYYeVCwcdynLkcuevSTRMdkvcQikgfvbBO1ZCY+wGWaKPlnZ3rXrg1cyPsg0jKgmJU4VorXI5zMWauT4nihsa50Nqp0IWel9Vgu0S9H3m+2XNZh9GZGu6PjHmP4NpnOgmjKxNfnvFaZB0vPFZUpYG1ELFo0s2Zx3wy/VzAedVHKBddI6htevQIgjvJAqVzgtGmpYg39s8dQrdbJNV4sCw46hHwpOkQXiwY11Q2oEHA4uFNiqECj4ziZttrVw/7GvhpP3LtI6nxewiK8DoNKT2tQdHPWM="

  matrix:
    - TARGET=amd64
    - TARGET=ppc64le

before_install:
  - sudo ls -lathr /etc/kubernetes || true
  - sudo apt-get update -qq
  - go get github.com/mattn/goveralls

install:
  - go get -u golang.org/x/lint/golint

before_script:
  # Make gopath... to run golint/go fmt/go vet
  # Suppress golint for fixing lint later.
  - golint ./... | grep -v vendor | grep -v ALL_CAPS | xargs -r false
  - go fmt ./...
  - go vet ./...
#  - gocyclo -over 15 ./multus

script:
  - GOARCH="${TARGET}" ./build
  - |
    if [ "${TARGET}" == "amd64" ]; then
      sudo env PATH=${PATH} ./test.sh
      goveralls -coverprofile=coverage.out -service=travis-ci
      mkdir -p ${TRAVIS_BUILD_DIR}/dist
      tar cvfz ${TRAVIS_BUILD_DIR}/dist/multus-cni_amd64.tar.gz --warning=no-file-changed --exclude="dist" .
      docker build -t nfvpe/multus:latest-amd64 .
      docker build -t nfvpe/multus:latest-ppc64le -f Dockerfile.ppc64le .
    fi

deploy:
  # Release on versioned tag (e.g. v1.0)
  - provider: script
    #skip_cleanup: true
    script: curl -sL https://git.io/goreleaser | bash
    on:
      tags: true
      all_branches: true
      condition: "$TRAVIS_TAG =~ ^v[0-9].*$"
  # Push images to Dockerhub on tag
  - provider: script
    skip_cleanup: true
    script: >
      bash -c '
      docker tag nfvpe/multus:latest-amd64 nfvpe/multus:latest;
      docker tag nfvpe/multus:latest-amd64 nfvpe/multus:stable;
      docker tag nfvpe/multus:latest-amd64 nfvpe/multus:stable-amd64;
      docker tag nfvpe/multus:latest-amd64 nfvpe/multus:$TRAVIS_TAG;
      docker tag nfvpe/multus:latest-ppc64le nfvpe/multus:stable-ppc64le;
      docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"; 
      docker push nfvpe/multus:latest;
      docker push nfvpe/multus:latest-amd64;
      docker push nfvpe/multus:latest-ppc64le;
      docker push nfvpe/multus:stable;
      docker push nfvpe/multus:stable-amd64;
      docker push nfvpe/multus:stable-ppc64le;
      docker push nfvpe/multus:$TRAVIS_TAG;
      echo done'
    on:
      tags: true
      all_branches: true
      condition: "$TRAVIS_TAG =~ ^v[0-9].*$"
  # Push images to Dockerhub on merge to master
  - provider: script
    on:
      branch: master
    script: >
      bash -c '
      docker tag nfvpe/multus:latest-amd64 nfvpe/multus:snapshot;
      docker tag nfvpe/multus:latest-amd64 nfvpe/multus:snapshot-amd64;
      docker tag nfvpe/multus:latest-ppc64le nfvpe/multus:snapshot-ppc64le;
      docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS";
      docker push nfvpe/multus:snapshot;
      docker push nfvpe/multus:snapshot-amd64;
      docker push nfvpe/multus:snapshot-ppc64le;
      docker push nfvpe/multus:latest;
      docker push nfvpe/multus:latest-amd64;
      docker push nfvpe/multus:latest-ppc64le;
      echo done'
  - provider: script
    on:
      branch: entrypoint-newsleep
    script: >
      bash -c '
      docker tag nfvpe/multus:latest-amd64 nfvpe/multus:testentrypoint;
      docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS";
      docker push nfvpe/multus:testentrypoint;
      echo done'

after_success:
  # put build tgz to bintray
  - curl -T ${TRAVIS_BUILD_DIR}/dist/multus-cni_amd64.tar.gz -u${BINTRAY_USER}:${BINTRAY_APIKEY} https://api.bintray.com/content/redhat-nfvpe/multus-cni-crd-snapshots/snapshot/snapshot-${TRAVIS_COMMIT}/multus-cni_amd64-${TRAVIS_COMMIT}.tar.gz
  # publish uploaded file
  - curl -X POST -u${BINTRAY_USER}:${BINTRAY_APIKEY} https://api.bintray.com/content/redhat-nfvpe/multus-cni-crd-snapshots/snapshot/snapshot-${TRAVIS_COMMIT}/publish
  # put it in bintray download list
  - sleep 20
  - "curl -X PUT -H 'Accept: application/json' -H 'Content-type: application/json' -u${BINTRAY_USER}:${BINTRAY_APIKEY} https://api.bintray.com/file_metadata/redhat-nfvpe/multus-cni-crd-snapshots/multus-cni_amd64-${TRAVIS_COMMIT}.tar.gz -d '{\"list_in_downloads\":true}'"
